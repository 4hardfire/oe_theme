<?php

/**
 * @file
 * Module file used for theming the Tender content type.
 */

declare(strict_types = 1);

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\oe_content_tender\TenderNodeWrapper;

/**
 * Implements hook_theme().
 */
function oe_theme_content_tender_theme() {
  return [
    'oe_theme_content_tender_status' => [
      'variables' => [
        'label' => '',
        'name' => '',
      ],
    ],
    'oe_theme_content_tender_label_status' => [
      'variables' => [
        'label' => '',
        'name' => '',
      ],
    ],
  ];
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_tender_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  // Run only on tender content type.
  if ($entity->bundle() !== 'oe_tender') {
    return;
  }

  // Field labels are different in frontend and backend.
  // Here we override them, in full and teaser view mode.
  if (in_array($build['#view_mode'], ['full', 'teaser'])) {
    $label_overrides = [
      'body' => t('Description'),
      'oe_departments' => t('Departments'),
    ];

    if ($entity->get('oe_departments')->count() === 1) {
      $label_overrides['oe_departments'] = t('Department');
    }

    foreach ($label_overrides as $name => $label_override) {
      if (!$entity->get($name)->isEmpty() && isset($build[$name]['#title'])) {
        $build[$name]['#title'] = $label_override;
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function oe_theme_content_tender_preprocess_field__node__oe_tender_deadline__full(&$variables, $hook) {
  $node = TenderNodeWrapper::getInstance($variables['element']['#object']);
  if ($node->isClosed()) {
    // Cross out closed tender.
    $variables['attributes']['class'] = ['ecl-u-type-strike'];
  }
}
