<?php

/**
 * @file
 * Module file used for theming the News content type.
 */

declare(strict_types = 1);

use Drupal\media\MediaInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\rdf_skos\Plugin\Field\SkosConceptReferenceFieldItemList;

/**
 * Implements template_preprocess_node() for the News node type.
 */
function oe_theme_content_news_preprocess_node__oe_news(&$variables) {
  if ($variables['view_mode'] !== 'full') {
    return;
  }

  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  $media = $node->get('oe_news_featured_media')->entity;
  if ($media instanceof MediaInterface) {
    $builder = \Drupal::entityTypeManager()->getViewBuilder('media');
    $variables['content']['featured_image'] = $builder->view($media, 'oe_theme_main_content');
    // Show the image always at the top.
    $variables['content']['featured_image']['#weight'] = -100;
    $variables['content']['featured_image']['#attributes']['class'][] = 'ecl-u-type-paragraph';
    $variables['content']['featured_image']['#attributes']['class'][] = 'ecl-u-mb-l';
  }
}

/**
 * Implements template_preprocess_node() for the News node type.
 */
function oe_theme_content_news_preprocess_node__oe_news__teaser(&$variables) {
  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];

  // Add news types to page metadata.
  if (!$node->get('oe_news_types')->isEmpty()) {
    $variables['metas']['types'] = _get_comma_separated_skos_meta($node->get('oe_news_types'));
  }

  // Add publication date to page metadata.
  $timestamp = $node->get('oe_publication_date')->date->getTimestamp();
  $variables['metas']['date'] = \Drupal::service('date.formatter')->format($timestamp, 'oe_theme_news_date');

  // Add news locations to page metadata.
  if (!$node->get('oe_news_location')->isEmpty()) {
    $variables['metas']['location'] = _get_comma_separated_skos_meta($node->get('oe_news_location'));
  }

  // Add news authors to page metadata.
  if (!$node->get('oe_author')->isEmpty()) {
    $variables['metas']['authors'] = _get_comma_separated_skos_meta($node->get('oe_author'));
  }
}

/**
 * Implements hook_ENTITY_TYPE_view_alter().
 */
function oe_theme_content_news_node_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->bundle() !== 'oe_news') {
    return;
  }

  if ($build['#view_mode'] === 'full') {
    // Rename field labels based on number of items.
    $plural_label_overrides = [
      'oe_author' => t('Authors'),
    ];

    foreach ($plural_label_overrides as $name => $label_override) {
      if (!$entity->get($name)->isEmpty() && $entity->get($name)->count() > 1 && isset($build[$name]['#title'])) {
        $build[$name]['#title'] = $label_override;
      }
    }
  }
}

/**
 * Format a list of SKOS references into a comma separated string.
 *
 * @param \Drupal\rdf_skos\Plugin\Field\SkosConceptReferenceFieldItemList $items
 *   Field item list object.
 *
 * @return string
 *   Comma separated string.
 */
function _get_comma_separated_skos_meta(SkosConceptReferenceFieldItemList $items): string {
  $list = [];
  foreach ($items as $item) {
    $entity = $item->entity;
    $list[] = \Drupal::service('entity.repository')->getTranslationFromContext($entity)->label();
  }
  return implode(', ', $list);
}
